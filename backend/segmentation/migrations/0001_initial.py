# pylint: skip-file
# Generated by Django 2.0.1 on 2018-04-11 20:55

import audiofield.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('song', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('ind', models.PositiveIntegerField(verbose_name='Index')),
                ('audio_file', audiofield.fields.AudioField(blank=True, help_text='Allowed type: .wav', max_length=500, upload_to='')),
                ('length_in_samples', models.PositiveIntegerField()),
                ('start_position_in_samples', models.PositiveIntegerField()),
                ('end_position_in_samples', models.PositiveIntegerField()),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Segmenter',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('processing_status',
                 models.CharField(
                     choices=[('not_started', 'Not started'), ('pending', 'Pending...'), ('failed', 'Failed'), ('done', 'Done')],
                     default='not_started',
                     max_length=15)),
                ('method', models.CharField(choices=[('blind', 'Blind'), ('flexible', 'Flexible')], max_length=10)),
                ('n_tempo_lags_per_segment', models.PositiveSmallIntegerField(default=4)),
                ('parent', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmenters', to='song.TempoEstimator')),
            ],
        ),
        migrations.AddField(
            model_name='segment',
            name='parent',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='segmentation.Segmenter'),
        ),
        migrations.AlterUniqueTogether(
            name='segmenter',
            unique_together={('parent', 'method', 'n_tempo_lags_per_segment')},
        ),
        migrations.AlterUniqueTogether(
            name='segment',
            unique_together={('ind', 'parent')},
        ),
    ]
