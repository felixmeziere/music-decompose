#Â pylint: skip-file
# Generated by Django 2.0.1 on 2018-03-02 19:18
# pylint: skip-file
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('song', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Segment',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('segment_index', models.PositiveIntegerField()),
                ('length_in_samples', models.PositiveIntegerField()),
                ('start_position_in_samples', models.PositiveIntegerField()),
                ('end_position_in_samples', models.PositiveIntegerField()),
                ('audio_file', models.FileField(blank=True, null=True, upload_to='')),
            ],
        ),
        migrations.CreateModel(
            name='Segmenter',
            fields=[
                ('uuid', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('added_at', models.DateTimeField(auto_now_add=True)),
                ('method', models.CharField(choices=[('blind', 'Blind'), ('flexible', 'Flexible')], max_length=10)),
                ('tempo', models.FloatField()),
                ('n_tempo_lags_per_segment', models.PositiveSmallIntegerField(default=4)),
                ('segmentation_status', models.CharField(choices=[('not_started', 'Not started'), ('pending', 'Pending...'), ('failed', 'Failed'), ('done', 'Done')], default='not_started', max_length=15)),
                ('data_path', models.CharField(max_length=500, null=True)),
                ('song', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segmenters', to='song.Song')),
            ],
        ),
        migrations.AddField(
            model_name='segment',
            name='segmenter',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='segments', to='segmentation.Segmenter'),
        ),
        migrations.AlterUniqueTogether(
            name='segmenter',
            unique_together={('song', 'method', 'n_tempo_lags_per_segment')},
        ),
        migrations.AlterUniqueTogether(
            name='segment',
            unique_together={('segment_index', 'segmenter')},
        ),
    ]
